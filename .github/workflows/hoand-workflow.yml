# Workflow name
name: hoand33-workflow

# Triggers for the workflow
on:
  # Manual trigger using the workflow_dispatch event
  workflow_dispatch:

  # Automatic trigger on push events to the main branch
  push:
    branches:
      - main

  # Automatic trigger on pull request events targeting the main branch
  pull_request:
    branches:
      - main

  # Scheduled trigger at 5:00 AM UTC, Monday through Friday
  schedule:
    - cron: "0 5 * * 1-5"

# Jobs defined in the workflow
jobs:
  install-build-elint-test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{env.NODE_VERSION}}
          cache: "npm"

      - name: Install, Build, Test
        run: |
          npm ci
          npm run lint
          npm run build --if-present
          npm test

  secret:
    runs-on: ubuntu-latest
    needs: install-build-test
    environment:
      name: dev

    steps:
      # Simulate a Deployment
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{secrets.AWS_SESSION_TOKEN}}
          aws-region: us-east-1

      - name: Deploy to Staging
        run: |
          echo "aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}"
          echo "aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          echo "aws-session-token: ${{secrets.AWS_SESSION_TOKEN}}"
          echo "version: ${{vars.VERSION}}"

  stage:
    runs-on: ubuntu-latest
    needs: install-build-test
    environment:
      name: dev

    steps:
      # Simulate a Deployment
      - name: Deploy to Staging
        run: |
          echo "Deployed to staging environment"

  production:
    runs-on: ubuntu-latest
    needs: stage
    environment:
      name: product

    steps:
      # Simulate a Deployment
      - name: Deploy to Production
        run: |
          echo "Deployed to production environment"
